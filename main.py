import os
import sys
import time
import requests
import json
from datetime import datetime
from colorama import Fore, Style
import itertools
import threading

# **рд╕реНрдХреНрд░реАрди рдХреНрд▓рд┐рдпрд░ рдХрд░реЗрдВ**  
os.system('clear')

# **рд▓реЛрдЧреЛ рдПрдирд┐рдореЗрд╢рди**  
def logo_animation():
    logo = """
\033[1;36m  
тЦИтЦИтЦИтЦИтЦИтЦИтХЧ  тЦИтЦИтЦИтЦИтЦИтЦИтХЧ  тЦИтЦИтЦИтЦИтЦИтЦИтХЧ тЦИтЦИтХЧ  тЦИтЦИтХЧтЦИтЦИтЦИтЦИтЦИтЦИтЦИтХЧтЦИтЦИтЦИтХЧ   тЦИтЦИтХЧ
тЦИтЦИтХФтХРтХРтЦИтЦИтХЧтЦИтЦИтХФтХРтХРтХРтЦИтЦИтХЧтЦИтЦИтХФтХРтХРтХРтХРтХЭ тЦИтЦИтХС  тЦИтЦИтХСтЦИтЦИтХФтХРтХРтХРтХРтХЭтЦИтЦИтЦИтЦИтХЧ  тЦИтЦИтХС
тЦИтЦИтЦИтЦИтЦИтЦИтХФтХЭтЦИтЦИтХС   тЦИтЦИтХСтЦИтЦИтХС  тЦИтЦИтЦИтХЧтЦИтЦИтЦИтЦИтЦИтЦИтЦИтХСтЦИтЦИтЦИтЦИтЦИтХЧ  тЦИтЦИтХФтЦИтЦИтХЧ тЦИтЦИтХС
тЦИтЦИтХФтХРтХРтХРтХЭ тЦИтЦИтХС   тЦИтЦИтХСтЦИтЦИтХС   тЦИтЦИтХСтЦИтЦИтХФтХРтХРтЦИтЦИтХСтЦИтЦИтХФтХРтХРтХЭ  тЦИтЦИтХСтХЪтЦИтЦИтХЧтЦИтЦИтХС
тЦИтЦИтХС     тХЪтЦИтЦИтЦИтЦИтЦИтЦИтХФтХЭтХЪтЦИтЦИтЦИтЦИтЦИтЦИтХФтХЭтЦИтЦИтХС  тЦИтЦИтХСтЦИтЦИтЦИтЦИтЦИтЦИтЦИтХЧтЦИтЦИтХС тХЪтЦИтЦИтЦИтЦИтХС
тХЪтХРтХЭ      тХЪтХРтХРтХРтХРтХРтХЭ  тХЪтХРтХРтХРтХРтХРтХЭ тХЪтХРтХЭ  тХЪтХРтХЭтХЪтХРтХРтХРтХРтХРтХРтХЭтХЪтХРтХЭ  тХЪтХРтХРтХРтХЭ
\033[0m
"""
    for char in logo:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(0.002)

logo_animation()

# **рд▓реЛрдбрд┐рдВрдЧ рдПрдирд┐рдореЗрд╢рди**  
def loading_animation(text, duration=3):
    spinner = itertools.cycle(["таЛ", "таЩ", "та╣", "та╕", "та╝", "та┤", "таж", "таз", "таЗ", "таП"])
    end_time = time.time() + duration
    while time.time() < end_time:
        sys.stdout.write(f"\r{Fore.YELLOW}{text} {next(spinner)}{Style.RESET_ALL}")
        sys.stdout.flush()
        time.sleep(0.1)
    print("")

# **рдЗрдВрдЯрд░рдиреЗрдЯ рдЪреЗрдХ рдлрдВрдХреНрд╢рди**  
def check_internet():
    while True:
        try:
            requests.get("https://www.google.com", timeout=5)
            return True
        except requests.ConnectionError:
            print(Fore.RED + "тЭМ рдЗрдВрдЯрд░рдиреЗрдЯ рдирд╣реАрдВ рдорд┐рд▓рд╛, 5 рд╕реЗрдХрдВрдб рдореЗрдВ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕..." + Style.RESET_ALL)
            time.sleep(5)

# **рдкрд╛рд╕рд╡рд░реНрдб рд╡реЗрд░рд┐рдлрд┐рдХреЗрд╢рди**  
def password_auth():
    correct_password = "12345"  # **рдЕрдкрдирд╛ рдкрд╛рд╕рд╡рд░реНрдб рд╕реЗрдЯ рдХрд░реЗрдВ**
    while True:
        password = input(Fore.GREEN + "ЁЯФТ рдкрд╛рд╕рд╡рд░реНрдб рджрд░реНрдЬ рдХрд░реЗрдВ: " + Style.RESET_ALL)
        if password == correct_password:
            loading_animation("рдкрд╛рд╕рд╡рд░реНрдб рд╕рддреНрдпрд╛рдкрд┐рдд рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ", 2)
            print(Fore.YELLOW + "тЬЕ рд▓реЙрдЧрд┐рди рд╕рдлрд▓!" + Style.RESET_ALL)
            break
        else:
            print(Fore.RED + "тЭМ рдЧрд▓рдд рдкрд╛рд╕рд╡рд░реНрдб! рджреЛрдмрд╛рд░рд╛ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВред" + Style.RESET_ALL)

# **рдПрдХреНрд╕реЗрд╕ рдЯреЛрдХрди рдлрд╛рдЗрд▓ рд▓реЛрдб рдХрд░реЗрдВ**  
def load_tokens():
    while True:
        token_file = input(Fore.CYAN + "ЁЯУВ рдЯреЛрдХрди рдлрд╛рдЗрд▓ рдХрд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ: " + Style.RESET_ALL)
        if os.path.exists(token_file):
            with open(token_file, 'r') as f:
                tokens = f.read().splitlines()
            return tokens
        else:
            print(Fore.RED + "тЭМ рдлрд╛рдЗрд▓ рдирд╣реАрдВ рдорд┐рд▓реА! рд╕рд╣реА рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВред" + Style.RESET_ALL)

# **Facebook Profile Name рдирд┐рдХрд╛рд▓реЗрдВ**  
def get_profile_name(access_token):
    try:
        url = f'https://graph.facebook.com/me?access_token={access_token}'
        response = requests.get(url)
        data = response.json()
        if 'name' in data:
            return data['name']
        return None
    except:
        return None

# **рдореИрд╕реЗрдЬ рднреЗрдЬрдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди**  
def send_message(access_token, user_id, message):
    url = f"https://graph.facebook.com/{user_id}/comments"
    headers = {'Authorization': f'Bearer {access_token}'}
    data = {'message': message}

    response = requests.post(url, headers=headers, data=data)
    
    if response.status_code == 200:
        print(Fore.GREEN + f"[тЬФ] {user_id} рдХреЛ рдореИрд╕реЗрдЬ рднреЗрдЬрд╛ рдЧрдпрд╛: {message}" + Style.RESET_ALL)
        return True
    else:
        print(Fore.RED + f"[тЬЦ] {user_id} рдХреЛ рдореИрд╕реЗрдЬ рднреЗрдЬрдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓!" + Style.RESET_ALL)
        return False

# **рдкреНрд░рдЧрддрд┐ рдмрд╛рд░**  
def progress_bar(total, prefix="рдкреНрд░рдЧрддрд┐"):
    for i in range(total + 1):
        percent = (i / total) * 100
        bar = "тЦИ" * i + "-" * (total - i)
        sys.stdout.write(f"\r{Fore.CYAN}{prefix}: |{bar}| {percent:.2f}%{Style.RESET_ALL}")
        sys.stdout.flush()
        time.sleep(0.05)
    print("")

# **рдореЗрди рдкреНрд░реЛрд╕реЗрд╕**  
def main():
    check_internet()
    password_auth()
    access_tokens = load_tokens()

    # **рдкреНрд░реЛрдлрд╛рдЗрд▓ рдЬрд╛рдирдХрд╛рд░реА рдирд┐рдХрд╛рд▓реЗрдВ**  
    for token in access_tokens:
        profile_name = get_profile_name(token)
        if profile_name:
            print(Fore.YELLOW + f"тЬЕ рд▓реЙрдЧ рдЗрди: {profile_name}" + Style.RESET_ALL)
        else:
            print(Fore.RED + "тЭМ рдЧрд▓рдд рдпрд╛ рдПрдХреНрд╕рдкрд╛рдпрд░ рдЯреЛрдХрди!" + Style.RESET_ALL)
            continue

    user_id = input(Fore.CYAN + "ЁЯОп рдЯрд╛рд░рдЧреЗрдЯ рдкреЛрд╕реНрдЯ рдЖрдИрдбреА рджрд░реНрдЬ рдХрд░реЗрдВ: " + Style.RESET_ALL)
    message = input(Fore.GREEN + "ЁЯТм рднреЗрдЬрдиреЗ рдХреЗ рд▓рд┐рдП рдореИрд╕реЗрдЬ рджрд░реНрдЬ рдХрд░реЗрдВ: " + Style.RESET_ALL)

    confirm = input(Fore.YELLOW + "тЪая╕П рдХреНрдпрд╛ рдЖрдк рдореИрд╕реЗрдЬ рднреЗрдЬрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ? (yes/no): " + Style.RESET_ALL).lower()
    if confirm != "yes":
        print(Fore.RED + "тЭМ рдСрдкрд░реЗрд╢рди рдХреИрдВрд╕рд┐рд▓ рдХрд░ рджрд┐рдпрд╛ рдЧрдпрд╛ред" + Style.RESET_ALL)
        return

    delay_time = int(input(Fore.CYAN + "тП│ рдкреНрд░рддреНрдпреЗрдХ рдореИрд╕реЗрдЬ рдХреЗ рдмреАрдЪ рдбрд┐рд▓реЗ (рд╕реЗрдХрдВрдб рдореЗрдВ): " + Style.RESET_ALL))

    print(Fore.MAGENTA + "\nЁЯЪА рдореИрд╕реЗрдЬ рднреЗрдЬрдирд╛ рд╢реБрд░реВ рд╣реЛ рд░рд╣рд╛ рд╣реИ..." + Style.RESET_ALL)
    progress_bar(20, "рд╕рдВрджреЗрд╢ рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг")

    for token in access_tokens:
        send_message(token, user_id, message)
        time.sleep(delay_time)

    print(Fore.GREEN + "ЁЯОЙ рд╕рднреА рдореИрд╕реЗрдЬ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рднреЗрдЬ рджрд┐рдП рдЧрдП!" + Style.RESET_ALL)

# **рд╕реНрдХреНрд░рд┐рдкреНрдЯ рдЪрд▓рд╛рдПрдВ**  
if __name__ == "__main__":
    main()
